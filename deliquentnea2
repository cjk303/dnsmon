#!/usr/bin/env bash
set -euo pipefail

# ===== CONFIGURATION =====
TENANT="epiqglobal"
HOSTNAME="${TENANT}.delinea.app"
TOKEN_URL="https://${HOSTNAME}/identity/api/oauth2/token/xpmplatform"
SCOPE="xpmheadless"

CLIENT_ID="YOUR_CLIENT_ID"
CLIENT_SECRET="YOUR_CLIENT_SECRET"

FOLDER_NAME="Tier 1"
TEMPLATE_NAME="Epiq Active Directory Account"
SECRET_NAME="amer.epiqcorp.com\\SVI_T1_PAM_SvrOps_15"

# ===== GET ACCESS TOKEN =====
echo "Requesting access token..."
token_response=$(curl --silent --location \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --data-urlencode "grant_type=client_credentials" \
  --data-urlencode "scope=${SCOPE}" \
  --data-urlencode "client_id=${CLIENT_ID}" \
  --data-urlencode "client_secret=${CLIENT_SECRET}" \
  "${TOKEN_URL}")

access_token=$(echo "${token_response}" | jq -r '.access_token')

if [[ -z "${access_token}" || "${access_token}" == "null" ]]; then
  echo "Failed to obtain token."
  exit 1
fi
echo "Access token acquired."

# ===== GET FOLDER ID =====
echo "Looking up folder ID for '${FOLDER_NAME}'..."
folder_resp=$(curl --silent --location \
  --header "Authorization: Bearer ${access_token}" \
  "https://${HOSTNAME}/api/v1/folders?filter.name=${FOLDER_NAME}")

folder_id=$(echo "${folder_resp}" | jq -r '.records[0].id // empty')
if [[ -z "${folder_id}" ]]; then
  echo "Folder '${FOLDER_NAME}' not found or no permission."
  echo "${folder_resp}" | jq .
  exit 1
fi
echo "Folder ID: ${folder_id}"

# ===== GET TEMPLATE ID =====
echo "Looking up template ID for '${TEMPLATE_NAME}'..."
template_resp=$(curl --silent --location \
  --header "Authorization: Bearer ${access_token}" \
  "https://${HOSTNAME}/api/v1/secret-templates?filter.name=${TEMPLATE_NAME}")

template_id=$(echo "${template_resp}" | jq -r '.records[0].id // empty')
if [[ -z "${template_id}" ]]; then
  echo "Template '${TEMPLATE_NAME}' not found or no permission."
  echo "${template_resp}" | jq .
  exit 1
fi
echo "Template ID: ${template_id}"

# ===== SEARCH FOR SECRET =====
echo "Searching for secret '${SECRET_NAME}'..."
secret_resp=$(curl --silent --location \
  --header "Authorization: Bearer ${access_token}" \
  "https://${HOSTNAME}/api/v1/secrets?filter.folderId=${folder_id}&filter.secretTemplateId=${template_id}&filter.name=${SECRET_NAME}")

secret_id=$(echo "${secret_resp}" | jq -r '.records[0].id // empty')
if [[ -z "${secret_id}" ]]; then
  echo "Secret not found in folder '${FOLDER_NAME}' with given template."
  echo "${secret_resp}" | jq .
  exit 1
fi
echo "Found Secret ID: ${secret_id}"

# ===== GET SECRET PASSWORD =====
echo "Retrieving password..."
fields_resp=$(curl --silent --location \
  --header "Authorization: Bearer ${access_token}" \
  "https://${HOSTNAME}/api/v1/secrets/${secret_id}/fields")

password=$(echo "${fields_resp}" | jq -r '.[] | select(.slug=="password") | .value')
if [[ -z "${password}" ]]; then
  echo "Password field not found or inaccessible."
  echo "${fields_resp}" | jq .
  exit 1
fi

echo "Password for '${SECRET_NAME}': ${password}"
