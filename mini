def parse_bgp_uptime(uptime_str: str) -> int:
    if not uptime_str or uptime_str.lower() in ("never", "idle", "active", "connect", "opensent", "openconfirm"):
        return 0
    uptime_str = uptime_str.strip()
    # Match formats like '1w2d 03:04:05', '2d 12:34:56', '00:12:34'
    week_day_match = re.match(r'(?:(\d+)w)?(?:(\d+)d)?\s*(\d{1,2}):(\d{2}):(\d{2})', uptime_str)
    if week_day_match:
        weeks = int(week_day_match.group(1) or 0)
        days = int(week_day_match.group(2) or 0)
        hours = int(week_day_match.group(3) or 0)
        minutes = int(week_day_match.group(4) or 0)
        seconds = int(week_day_match.group(5) or 0)
        return weeks*7*24*3600 + days*24*3600 + hours*3600 + minutes*60 + seconds
    # Match formats like '00:12:34'
    hms_match = re.match(r'(\d{1,2}):(\d{2}):(\d{2})', uptime_str)
    if hms_match:
        hours = int(hms_match.group(1))
        minutes = int(hms_match.group(2))
        seconds = int(hms_match.group(3))
        return hours*3600 + minutes*60 + seconds
    return 0
